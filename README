NAME
    Tags::HTML::Search - Tags helper for gradient evaluation.

SYNOPSIS
     use Tags::HTML::Search;

     my $obj = Tags::HTML::Search->new(%params);
     $obj->cleanup;
     $obj->init;
     $obj->process;
     $obj->process_css;

METHODS
  "new"
     my $obj = Tags::HTML::Search->new(%params);

    Constructor.

    *       "css"

            'CSS::Struct::Output' object for process_css processing.

            It's required.

            Default value is undef.

    *       "css_form_default"

            Flag that (un)set Tags::HTML::Form CSS style.

            Default value is 0.

    *       "search_button_text"

            Search buttom text.

            Default value is 'Search'.

    *       "search_type"

            Search type.

            Possible values are: button checkbox color date datetime-local
            email file hidden image month number password radio range reset
            search submit tel text time url week.

            Default value is 'text'.

    *       "tags"

            'Tags::Output' object.

            Default value is undef.

  "process"
     $obj->process;

    Process Tags structure for .

    Returns undef.

  "process_css"
     $obj->process_css;

    Process CSS::Struct structure for output.

    Returns undef.

ERRORS
     new():
             From Class::Utils::set_params():
                     Unknown parameter '%s'.
             Parameter 'css' must be a 'CSS::Struct::Output::*' class.
             Parameter 'tags' must be a 'Tags::Output::*' class.

EXAMPLE
     use strict;
     use warnings;

     use CSS::Struct::Output::Indent;
     use Tags::HTML::Search;
     use Tags::Output::Indent;

     # Object.
     my $css = CSS::Struct::Output::Indent->new;
     my $tags = Tags::Output::Indent->new;
     my $obj = Tags::HTML::Search->new(
             'css' => $css,
             'tags' => $tags,
     );

     # Process search.
     $obj->process_css;
     $obj->process;

     # Print out.
     print "CSS\n";
     print $css->flush."\n";
     print "HTML\n";
     print $tags->flush."\n";

     # Output:
     # TODO

DEPENDENCIES
    Class::Utils, Data::HTML::Button, Data::HTML::Form::Input, Tags::HTML,
    Tags::HTML::Container, Tags::HTML::Form.

SEE ALSO
    Tags::HTML::Stars
        Tags helper for stars evaluation.

REPOSITORY
    <https://github.com/michal-josef-spacek/Tags-HTML-Search>

AUTHOR
    Michal Josef Špaček <mailto:skim@cpan.org>

    <http://skim.cz>

LICENSE AND COPYRIGHT
    © 2022-2023 Michal Josef Špaček

    BSD 2-Clause License

VERSION
    0.01

